<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.blogstation.mapper.UserMapper">
	<!-- 自定义结果集 -->
	<resultMap type="UserBean" id="userMap">
		<id property="id" column="id" javaType="Integer" />
		<result property="username" column="username" javaType="String" />
		<result property="password" column="password" javaType="String" />
		<result property="account" column="account" javaType="Double" />
	</resultMap>

	<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 -->
	<!-- useGeneratedKeys：（仅对insert有用）这会告诉 MyBatis使用JDBC的getGeneratedKeys方法来取出由数据（比如：像MySQL和SQLServer这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： 
		false。 -->
	<!-- keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过insert语句的 
		selectKey子元素设置它的值。默认：不设置。 -->
	<!-- #{}中的内容为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值 -->

	<insert id="insertUserTradition" useGeneratedKeys="true"
		keyProperty="user.id">
		INSERT INTO tb_user (username,password,account) VALUES
		(#{user.username},#{user.password},#{user.account})
	</insert>

	<update id="updateUserTradition">
		UPDATE tb_user SET
		username=#{user.username},password=#{user.password},account=#{user.account}
		WHERE
		id=#{id}
	</update>

	<delete id="deleteUserTradition">
		DELETE FROM tb_user WHERE id=#{id}
	</delete>

	<select id="getUserByIdTradition" resultMap="userMap">
		SELECT * FROM
		tb_user WHERE id=#{id}
	</select>

	<select id="getAllUserAccountTradition" resultMap="userMap">
		SELECT * FROM
		tb_user
	</select>
</mapper>